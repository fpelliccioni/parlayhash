./parlay_hash,0%update,n=10000,p=1,long_long,z=0,grow=0,mem_pe=55,insert_mops=30,mops=44
./parlay_hash,0%update,n=10000,p=1,long_long,z=0,grow=0,mem_pe=55,insert_mops=29,mops=43
./parlay_hash,0%update,n=10000000,p=1,long_long,z=0,grow=0,mem_pe=31,insert_mops=10,mops=14
./parlay_hash,0%update,n=10000000,p=1,long_long,z=0,grow=0,mem_pe=31,insert_mops=10,mops=15

./parlay_hash,10%update,n=10000,p=1,long_long,z=0,grow=0,mem_pe=55,insert_mops=28,mops=37
./parlay_hash,10%update,n=10000,p=1,long_long,z=0,grow=0,mem_pe=55,insert_mops=29,mops=37
./parlay_hash,10%update,n=10000000,p=1,long_long,z=0,grow=0,mem_pe=31,insert_mops=10,mops=13
./parlay_hash,10%update,n=10000000,p=1,long_long,z=0,grow=0,mem_pe=31,insert_mops=10,mops=13

./parlay_hash,50%update,n=10000,p=1,long_long,z=0,grow=0,mem_pe=55,insert_mops=27,mops=26
./parlay_hash,50%update,n=10000,p=1,long_long,z=0,grow=0,mem_pe=55,insert_mops=29,mops=26
./parlay_hash,50%update,n=10000000,p=1,long_long,z=0,grow=0,mem_pe=31,insert_mops=10,mops=10
./parlay_hash,50%update,n=10000000,p=1,long_long,z=0,grow=0,mem_pe=31,insert_mops=10,mops=10

./parlay_hash,0%update,n=10000,p=1,long_long,z=0.99,grow=0,mem_pe=55,insert_mops=28,mops=45
./parlay_hash,0%update,n=10000,p=1,long_long,z=0.99,grow=0,mem_pe=55,insert_mops=27,mops=45
./parlay_hash,0%update,n=10000000,p=1,long_long,z=0.99,grow=0,mem_pe=31,insert_mops=10,mops=20
./parlay_hash,0%update,n=10000000,p=1,long_long,z=0.99,grow=0,mem_pe=31,insert_mops=10,mops=20

./parlay_hash,10%update,n=10000,p=1,long_long,z=0.99,grow=0,mem_pe=55,insert_mops=26,mops=39
./parlay_hash,10%update,n=10000,p=1,long_long,z=0.99,grow=0,mem_pe=55,insert_mops=27,mops=39
./parlay_hash,10%update,n=10000000,p=1,long_long,z=0.99,grow=0,mem_pe=31,insert_mops=10,mops=18
./parlay_hash,10%update,n=10000000,p=1,long_long,z=0.99,grow=0,mem_pe=31,insert_mops=10,mops=18

./parlay_hash,50%update,n=10000,p=1,long_long,z=0.99,grow=0,mem_pe=55,insert_mops=28,mops=27
./parlay_hash,50%update,n=10000,p=1,long_long,z=0.99,grow=0,mem_pe=55,insert_mops=25,mops=27
./parlay_hash,50%update,n=10000000,p=1,long_long,z=0.99,grow=0,mem_pe=31,insert_mops=10,mops=14
./parlay_hash,50%update,n=10000000,p=1,long_long,z=0.99,grow=0,mem_pe=31,insert_mops=10,mops=14

./parlay_hash,10%update,n=10000,p=1,int,z=0,grow=0,mem_pe=33,insert_mops=27,mops=35
./parlay_hash,10%update,n=10000,p=1,int,z=0,grow=0,mem_pe=33,insert_mops=28,mops=35
./parlay_hash,10%update,n=10000000,p=1,int,z=0,grow=0,mem_pe=7,insert_mops=14,mops=17
./parlay_hash,10%update,n=10000000,p=1,int,z=0,grow=0,mem_pe=7,insert_mops=14,mops=17

./parlay_hash,0%update,n=1229916,p=1,string_4xlong,trigram,grow=0,mem_pe=81,insert_mops=8,mops=16
./parlay_hash,0%update,n=1229916,p=1,string_4xlong,trigram,grow=0,mem_pe=81,insert_mops=8,mops=16
./parlay_hash,10%update,n=1229916,p=1,string_4xlong,trigram,grow=0,mem_pe=81,insert_mops=8,mops=14
./parlay_hash,10%update,n=1229916,p=1,string_4xlong,trigram,grow=0,mem_pe=81,insert_mops=8,mops=14
./parlay_hash,50%update,n=1229916,p=1,string_4xlong,trigram,grow=0,mem_pe=81,insert_mops=8,mops=11
./parlay_hash,50%update,n=1229916,p=1,string_4xlong,trigram,grow=0,mem_pe=81,insert_mops=8,mops=11

initial insert geometric mean of mops = 10.7476
benchmark geometric mean of mops = 21.411
bytes/element geometric mean = 26.2982
