./parlay_hash,0%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=52,insert_mops=197,mops=6281
./parlay_hash,0%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=52,insert_mops=185,mops=6261
./parlay_hash,0%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=30,insert_mops=443,mops=1033
./parlay_hash,0%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=31,insert_mops=447,mops=996

./parlay_hash,10%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=52,insert_mops=35,mops=1881
./parlay_hash,10%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=52,insert_mops=36,mops=1819
./parlay_hash,10%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=31,insert_mops=444,mops=846
./parlay_hash,10%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=31,insert_mops=441,mops=846

./parlay_hash,50%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=53,insert_mops=36,mops=816
./parlay_hash,50%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=52,insert_mops=51,mops=805
./parlay_hash,50%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=31,insert_mops=440,mops=580
./parlay_hash,50%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=31,insert_mops=439,mops=587

./parlay_hash,0%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=53,insert_mops=188,mops=6603
./parlay_hash,0%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=53,insert_mops=31,mops=6641
./parlay_hash,0%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=31,insert_mops=441,mops=1761
./parlay_hash,0%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=31,insert_mops=442,mops=1759

./parlay_hash,10%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=53,insert_mops=38,mops=1001
./parlay_hash,10%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=52,insert_mops=37,mops=1037
./parlay_hash,10%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=31,insert_mops=442,mops=1067
./parlay_hash,10%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=31,insert_mops=440,mops=1073

./parlay_hash,50%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=52,insert_mops=36,mops=310
./parlay_hash,50%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=54,insert_mops=36,mops=309
./parlay_hash,50%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=31,insert_mops=440,mops=497
./parlay_hash,50%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=31,insert_mops=437,mops=528

./parlay_hash,10%update,n=10000,p=128,int,z=0,grow=0,mem_pe=32,insert_mops=37,mops=1376
./parlay_hash,10%update,n=10000,p=128,int,z=0,grow=0,mem_pe=32,insert_mops=37,mops=1339
./parlay_hash,10%update,n=10000000,p=128,int,z=0,grow=0,mem_pe=7,insert_mops=439,mops=1475
./parlay_hash,10%update,n=10000000,p=128,int,z=0,grow=0,mem_pe=7,insert_mops=443,mops=1476

./parlay_hash,0%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=75,insert_mops=264,mops=1509
./parlay_hash,0%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=81,insert_mops=256,mops=1505
./parlay_hash,10%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=81,insert_mops=244,mops=779
./parlay_hash,10%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=81,insert_mops=244,mops=781
./parlay_hash,50%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=81,insert_mops=243,mops=352
./parlay_hash,50%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=81,insert_mops=240,mops=352

initial insert geometric mean of mops = 369.725
benchmark geometric mean of mops = 1129.65
bytes/element geometric mean = 25.9488
