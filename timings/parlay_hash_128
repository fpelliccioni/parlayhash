./parlay_hash,0%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=26,insert_mops=193,mops=5976
./parlay_hash,0%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=26,insert_mops=196,mops=5992
./parlay_hash,0%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=30,insert_mops=442,mops=1032
./parlay_hash,0%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=30,insert_mops=416,mops=1023

./parlay_hash,10%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=26,insert_mops=211,mops=1807
./parlay_hash,10%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=26,insert_mops=213,mops=1805
./parlay_hash,10%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=30,insert_mops=444,mops=844
./parlay_hash,10%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=30,insert_mops=362,mops=843

./parlay_hash,50%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=25,insert_mops=72,mops=815
./parlay_hash,50%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=26,insert_mops=228,mops=815
./parlay_hash,50%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=30,insert_mops=441,mops=593
./parlay_hash,50%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=30,insert_mops=441,mops=593

./parlay_hash,0%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=23,insert_mops=72,mops=6091
./parlay_hash,0%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=24,insert_mops=73,mops=6177
./parlay_hash,0%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=30,insert_mops=443,mops=1724
./parlay_hash,0%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=30,insert_mops=441,mops=1719

./parlay_hash,10%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=26,insert_mops=230,mops=1037
./parlay_hash,10%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=26,insert_mops=223,mops=1052
./parlay_hash,10%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=30,insert_mops=441,mops=1079
./parlay_hash,10%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=30,insert_mops=439,mops=1071

./parlay_hash,50%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=26,insert_mops=237,mops=323
./parlay_hash,50%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=26,insert_mops=209,mops=314
./parlay_hash,50%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=30,insert_mops=443,mops=504
./parlay_hash,50%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=30,insert_mops=413,mops=502

./parlay_hash,10%update,n=10000,p=128,int,z=0,grow=0,mem_pe=6,insert_mops=175,mops=1331
./parlay_hash,10%update,n=10000,p=128,int,z=0,grow=0,mem_pe=6,insert_mops=181,mops=1331
./parlay_hash,10%update,n=10000000,p=128,int,z=0,grow=0,mem_pe=6,insert_mops=440,mops=1441
./parlay_hash,10%update,n=10000000,p=128,int,z=0,grow=0,mem_pe=6,insert_mops=439,mops=1411

./parlay_hash,0%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=69,insert_mops=234,mops=1449
./parlay_hash,0%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=69,insert_mops=235,mops=1448
./parlay_hash,10%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=69,insert_mops=230,mops=749
./parlay_hash,10%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=69,insert_mops=231,mops=751
./parlay_hash,50%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=21,insert_mops=188,mops=346
./parlay_hash,50%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=69,insert_mops=231,mops=347

initial insert geometric mean of mops = 353.704
benchmark geometric mean of mops = 1113.29
bytes/element geometric mean = 24.2757
