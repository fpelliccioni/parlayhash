./parlay_hash,0%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=52,insert_mops=158,mops=5643
./parlay_hash,0%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=52,insert_mops=119,mops=5655
./parlay_hash,0%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=54,insert_mops=492,mops=1215
./parlay_hash,0%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=53,insert_mops=492,mops=1216

./parlay_hash,10%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=52,insert_mops=240,mops=2184
./parlay_hash,10%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=52,insert_mops=239,mops=2183
./parlay_hash,10%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=54,insert_mops=456,mops=1033
./parlay_hash,10%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=54,insert_mops=489,mops=1033

./parlay_hash,50%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=52,insert_mops=255,mops=964
./parlay_hash,50%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=52,insert_mops=255,mops=964
./parlay_hash,50%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=54,insert_mops=491,mops=740
./parlay_hash,50%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=54,insert_mops=493,mops=739

./parlay_hash,0%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=52,insert_mops=97,mops=6254
./parlay_hash,0%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=52,insert_mops=115,mops=6169
./parlay_hash,0%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=54,insert_mops=493,mops=2134
./parlay_hash,0%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=54,insert_mops=493,mops=2134

./parlay_hash,10%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=52,insert_mops=248,mops=1300
./parlay_hash,10%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=52,insert_mops=244,mops=1272
./parlay_hash,10%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=54,insert_mops=491,mops=1255
./parlay_hash,10%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=54,insert_mops=494,mops=1270

./parlay_hash,50%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=52,insert_mops=246,mops=337
./parlay_hash,50%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=52,insert_mops=264,mops=321
./parlay_hash,50%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=54,insert_mops=490,mops=559
./parlay_hash,50%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=54,insert_mops=493,mops=529

./parlay_hash,10%update,n=10000,p=128,int,z=0,grow=0,mem_pe=13,insert_mops=184,mops=1427
./parlay_hash,10%update,n=10000,p=128,int,z=0,grow=0,mem_pe=13,insert_mops=204,mops=1429
./parlay_hash,10%update,n=10000000,p=128,int,z=0,grow=0,mem_pe=13,insert_mops=465,mops=1287
./parlay_hash,10%update,n=10000000,p=128,int,z=0,grow=0,mem_pe=13,insert_mops=462,mops=1286

./parlay_hash,0%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=84,insert_mops=236,mops=1493
./parlay_hash,0%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=84,insert_mops=247,mops=1489
./parlay_hash,10%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=83,insert_mops=236,mops=770
./parlay_hash,10%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=84,insert_mops=234,mops=773
./parlay_hash,50%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=84,insert_mops=236,mops=359
./parlay_hash,50%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=83,insert_mops=237,mops=361

initial insert geometric mean of mops = 380.782
benchmark geometric mean of mops = 1227.51
bytes/element geometric mean = 39.4431
