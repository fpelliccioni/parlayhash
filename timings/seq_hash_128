./seq_hash,0%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=88,insert_mops=104,mops=535
./seq_hash,0%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=91,insert_mops=113,mops=530
./seq_hash,0%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=29,insert_mops=352,mops=996
./seq_hash,0%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=29,insert_mops=352,mops=994

./seq_hash,10%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=36,insert_mops=88,mops=579
./seq_hash,10%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=37,insert_mops=128,mops=581
./seq_hash,10%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=29,insert_mops=348,mops=741
./seq_hash,10%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=29,insert_mops=347,mops=736

./seq_hash,50%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=29,insert_mops=122,mops=397
./seq_hash,50%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=35,insert_mops=101,mops=396
./seq_hash,50%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=29,insert_mops=346,mops=454
./seq_hash,50%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=29,insert_mops=347,mops=455

./seq_hash,0%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=39,insert_mops=115,mops=14
./seq_hash,0%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=40,insert_mops=125,mops=15
./seq_hash,0%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=29,insert_mops=349,mops=23
./seq_hash,0%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=29,insert_mops=346,mops=32

./seq_hash,10%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=35,insert_mops=24,mops=15
./seq_hash,10%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=35,insert_mops=40,mops=13
./seq_hash,10%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=29,insert_mops=345,mops=22
./seq_hash,10%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=29,insert_mops=342,mops=25

./seq_hash,50%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=40,insert_mops=121,mops=12
./seq_hash,50%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=34,insert_mops=118,mops=12
./seq_hash,50%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=29,insert_mops=345,mops=25
./seq_hash,50%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=29,insert_mops=344,mops=24

./seq_hash,10%update,n=10000,p=128,int,z=0,grow=0,mem_pe=24,insert_mops=113,mops=579
./seq_hash,10%update,n=10000,p=128,int,z=0,grow=0,mem_pe=15,insert_mops=96,mops=583
./seq_hash,10%update,n=10000000,p=128,int,z=0,grow=0,mem_pe=11,insert_mops=281,mops=781
./seq_hash,10%update,n=10000000,p=128,int,z=0,grow=0,mem_pe=11,insert_mops=305,mops=783

./seq_hash,0%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=114,insert_mops=240,mops=34
./seq_hash,0%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=113,insert_mops=237,mops=28
./seq_hash,10%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=115,insert_mops=238,mops=29
./seq_hash,10%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=115,insert_mops=237,mops=28
./seq_hash,50%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=114,insert_mops=237,mops=29
./seq_hash,50%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=115,insert_mops=238,mops=29

initial insert geometric mean of mops = 289.338
benchmark geometric mean of mops = 104.839
bytes/element geometric mean = 33.8002
