./tbb_hash,0%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=22,mops=380
./tbb_hash,0%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=21,mops=381
./tbb_hash,0%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=22,mops=340
./tbb_hash,0%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=22,mops=340

./tbb_hash,10%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=22,mops=273
./tbb_hash,10%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=22,mops=273
./tbb_hash,10%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=22,mops=266
./tbb_hash,10%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=22,mops=266

./tbb_hash,50%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=21,mops=74
./tbb_hash,50%update,n=10000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=21,mops=74
./tbb_hash,50%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=22,mops=73
./tbb_hash,50%update,n=10000000,p=128,long_long,z=0,grow=0,mem_pe=0,insert_mops=22,mops=73

./tbb_hash,0%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=21,mops=2
./tbb_hash,0%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=20,mops=3
./tbb_hash,0%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=22,mops=10
./tbb_hash,0%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=22,mops=8

./tbb_hash,10%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=22,mops=26
./tbb_hash,10%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=21,mops=28
./tbb_hash,10%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=22,mops=46
./tbb_hash,10%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=22,mops=47

./tbb_hash,50%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=21,mops=8
./tbb_hash,50%update,n=10000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=22,mops=12
./tbb_hash,50%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=21,mops=14
./tbb_hash,50%update,n=10000000,p=128,long_long,z=0.99,grow=0,mem_pe=0,insert_mops=22,mops=22

./tbb_hash,10%update,n=10000,p=128,int,z=0,grow=0,mem_pe=0,insert_mops=22,mops=263
./tbb_hash,10%update,n=10000,p=128,int,z=0,grow=0,mem_pe=0,insert_mops=22,mops=263
./tbb_hash,10%update,n=10000000,p=128,int,z=0,grow=0,mem_pe=0,insert_mops=23,mops=255
./tbb_hash,10%update,n=10000000,p=128,int,z=0,grow=0,mem_pe=0,insert_mops=23,mops=255

./tbb_hash,0%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=0,insert_mops=23,mops=6
./tbb_hash,0%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=-3,insert_mops=23,mops=7
./tbb_hash,10%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=0,insert_mops=24,mops=53
./tbb_hash,10%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=0,insert_mops=24,mops=49
./tbb_hash,50%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=0,insert_mops=24,mops=30
./tbb_hash,50%update,n=1229916,p=128,string_4xlong,trigram,grow=0,mem_pe=-1,insert_mops=24,mops=30

initial insert geometric mean of mops = 23.1705
benchmark geometric mean of mops = 53.806
bytes/element geometric mean = -nan
